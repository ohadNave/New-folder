{"remainingRequest":"C:\\Users\\ohadv\\Downloads\\New folder\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ohadv\\Downloads\\New folder\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ohadv\\Downloads\\New folder\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ohadv\\Downloads\\New folder\\src\\pages\\RegisterPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ohadv\\Downloads\\New folder\\src\\pages\\RegisterPage.vue","mtime":1594812809729},{"path":"C:\\Users\\ohadv\\Downloads\\New folder\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ohadv\\Downloads\\New folder\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ohadv\\Downloads\\New folder\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ohadv\\Downloads\\New folder\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvb2hhZHYvRG93bmxvYWRzL05ldyBmb2xkZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIkM6L1VzZXJzL29oYWR2L0Rvd25sb2Fkcy9OZXcgZm9sZGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBjb3VudHJpZXMgZnJvbSAiLi4vYXNzZXRzL2NvdW50cmllcyI7CmltcG9ydCB7IHJlcXVpcmVkLCBtaW5MZW5ndGgsIG1heExlbmd0aCwgYWxwaGEsIHNhbWVBcywgZW1haWwsIHVybCwgaGVscGVycyB9IGZyb20gInZ1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUmVnaXN0ZXIiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtOiB7CiAgICAgICAgdXNlcm5hbWU6ICIiLAogICAgICAgIGZpcnN0TmFtZTogIiIsCiAgICAgICAgbGFzdE5hbWU6ICIiLAogICAgICAgIGNvdW50cnk6IG51bGwsCiAgICAgICAgcGFzc3dvcmQ6ICIiLAogICAgICAgIGNvbmZpcm1lZFBhc3N3b3JkOiAiIiwKICAgICAgICBlbWFpbDogIiIsCiAgICAgICAgc3VibWl0RXJyb3I6IHVuZGVmaW5lZAogICAgICB9LAogICAgICBjb3VudHJpZXM6IFt7CiAgICAgICAgdmFsdWU6IG51bGwsCiAgICAgICAgdGV4dDogIiIsCiAgICAgICAgZGlzYWJsZWQ6IHRydWUKICAgICAgfV0sCiAgICAgIGVycm9yczogW10sCiAgICAgIHZhbGlkYXRlZDogZmFsc2UKICAgIH07CiAgfSwKICB2YWxpZGF0aW9uczogewogICAgZm9ybTogewogICAgICB1c2VybmFtZTogewogICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgICBsZW5ndGg6IGZ1bmN0aW9uIGxlbmd0aCh1KSB7CiAgICAgICAgICByZXR1cm4gbWluTGVuZ3RoKDMpKHUpICYmIG1heExlbmd0aCg4KSh1KTsKICAgICAgICB9LAogICAgICAgIGFscGhhOiBhbHBoYQogICAgICB9LAogICAgICBjb3VudHJ5OiB7CiAgICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkCiAgICAgIH0sCiAgICAgIHBhc3N3b3JkOiB7CiAgICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkLAogICAgICAgIGxlbmd0aDogZnVuY3Rpb24gbGVuZ3RoKHApIHsKICAgICAgICAgIHJldHVybiBtaW5MZW5ndGgoNSkocCkgJiYgbWF4TGVuZ3RoKDEwKShwKTsKICAgICAgICB9LAogICAgICAgIGFscGhhOiBoZWxwZXJzLnJlZ2V4KCdhbHBoYScsIC9eKD89LipbQCMkJV4mKz1+IWBdKSg/PS4qWzAtOV0pLykKICAgICAgfSwKICAgICAgY29uZmlybWVkUGFzc3dvcmQ6IHsKICAgICAgICByZXF1aXJlZDogcmVxdWlyZWQsCiAgICAgICAgc2FtZUFzUGFzc3dvcmQ6IHNhbWVBcygicGFzc3dvcmQiKQogICAgICB9LAogICAgICBmaXJzdE5hbWU6IHsKICAgICAgICByZXF1aXJlZDogcmVxdWlyZWQKICAgICAgfSwKICAgICAgbGFzdE5hbWU6IHsKICAgICAgICByZXF1aXJlZDogcmVxdWlyZWQKICAgICAgfSwKICAgICAgZW1haWw6IHsKICAgICAgICByZXF1aXJlZDogcmVxdWlyZWQsCiAgICAgICAgZW1haWw6IGVtYWlsCiAgICAgIH0sCiAgICAgIGltYWdlOiB7CiAgICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkCiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMkY291bnRyaWVzOwoKICAgIChfdGhpcyRjb3VudHJpZXMgPSB0aGlzLmNvdW50cmllcykucHVzaC5hcHBseShfdGhpcyRjb3VudHJpZXMsIF90b0NvbnN1bWFibGVBcnJheShjb3VudHJpZXMpKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHZhbGlkYXRlU3RhdGU6IGZ1bmN0aW9uIHZhbGlkYXRlU3RhdGUocGFyYW0pIHsKICAgICAgdmFyIF90aGlzJCR2JGZvcm0kcGFyYW0gPSB0aGlzLiR2LmZvcm1bcGFyYW1dLAogICAgICAgICAgJGRpcnR5ID0gX3RoaXMkJHYkZm9ybSRwYXJhbS4kZGlydHksCiAgICAgICAgICAkZXJyb3IgPSBfdGhpcyQkdiRmb3JtJHBhcmFtLiRlcnJvcjsKICAgICAgcmV0dXJuICRkaXJ0eSA/ICEkZXJyb3IgOiBudWxsOwogICAgfSwKICAgIFJlZ2lzdGVyOiBmdW5jdGlvbiBSZWdpc3RlcigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuYXhpb3MucG9zdCgiaHR0cHM6Ly9iYWNrZW5kMy0yLmhlcm9rdWFwcC5jb20vcmVnaXN0ZXIiLCB7CiAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiBfdGhpcy5mb3JtLnVzZXJuYW1lLAogICAgICAgICAgICAgICAgICBwYXNzd29yZDogX3RoaXMuZm9ybS5wYXNzd29yZCwKICAgICAgICAgICAgICAgICAgcGFzc3dvcmRBZ2FpbjogX3RoaXMuZm9ybS5jb25maXJtZWRQYXNzd29yZCwKICAgICAgICAgICAgICAgICAgZmlyc3RfbmFtZTogX3RoaXMuZm9ybS5maXJzdE5hbWUsCiAgICAgICAgICAgICAgICAgIGxhc3RfbmFtZTogX3RoaXMuZm9ybS5sYXN0TmFtZSwKICAgICAgICAgICAgICAgICAgY291bnRyeTogX3RoaXMuZm9ybS5jb3VudHJ5LAogICAgICAgICAgICAgICAgICBlbWFpbDogX3RoaXMuZm9ybS5lbWFpbCwKICAgICAgICAgICAgICAgICAgaW1hZ2U6IF90aGlzLmZvcm0uaW1hZ2UKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgX3RoaXMuJHJvdXRlci5wdXNoKCIvbG9naW4iKTsKCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDc7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDAucmVzcG9uc2UpOwogICAgICAgICAgICAgICAgX3RoaXMuZm9ybS5zdWJtaXRFcnJvciA9IF9jb250ZXh0LnQwLnJlc3BvbnNlLmRhdGE7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDddXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG9uUmVnaXN0ZXI6IGZ1bmN0aW9uIG9uUmVnaXN0ZXIoKSB7CiAgICAgIHRoaXMuJHYuZm9ybS4kdG91Y2goKTsKCiAgICAgIGlmICh0aGlzLiR2LmZvcm0uJGFueUVycm9yKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLlJlZ2lzdGVyKCk7CiAgICB9LAogICAgb25SZXNldDogZnVuY3Rpb24gb25SZXNldCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmZvcm0gPSB7CiAgICAgICAgdXNlcm5hbWU6ICIiLAogICAgICAgIGZpcnN0TmFtZTogIiIsCiAgICAgICAgbGFzdE5hbWU6ICIiLAogICAgICAgIGNvdW50cnk6IG51bGwsCiAgICAgICAgcGFzc3dvcmQ6ICIiLAogICAgICAgIGNvbmZpcm1lZFBhc3N3b3JkOiAiIiwKICAgICAgICBlbWFpbDogIiIKICAgICAgfTsKICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi4kdi4kcmVzZXQoKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["RegisterPage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"title\">Register</h1>\r\n    <b-form @submit.prevent=\"onRegister\" @reset.prevent=\"onReset\">\r\n      <b-form-group id=\"input-group-username\" label-cols-sm=\"3\" label=\"Username:\" label-for=\"username\">\r\n        <b-form-input id=\"username\" v-model=\"$v.form.username.$model\" type=\"text\" :state=\"validateState('username')\"></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.username.required\">\r\n          Username is required\r\n        </b-form-invalid-feedback>\r\n        <b-form-invalid-feedback v-else-if=\"!$v.form.username.length\">\r\n          Username length should be between 3-8 characters long\r\n        </b-form-invalid-feedback>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.username.alpha\">\r\n          Username must be alphabetic\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-firstName\" label-cols-sm=\"3\" label=\"First name:\" label-for=\"firstName\">\r\n        <b-form-input id=\"firstName\" type=\"text\" v-model=\"$v.form.firstName.$model\" :state=\"validateState('firstName')\"></b-form-input>\r\n          <b-form-invalid-feedback v-if=\"!$v.form.firstName.required\">\r\n          first name is required\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-lastName\" label-cols-sm=\"3\" label=\"last name:\" label-for=\"lastName\">\r\n        <b-form-input id=\"lastName\" type=\"text\" v-model=\"$v.form.lastName.$model\" :state=\"validateState('lastName')\"></b-form-input>\r\n          <b-form-invalid-feedback v-if=\"!$v.form.lastName.required\">\r\n          last name is required\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-country\" label-cols-sm=\"3\" label=\"Country:\" label-for=\"country\">\r\n        <b-form-select id=\"country\" v-model=\"$v.form.country.$model\" :options=\"countries\" :state=\"validateState('country')\"></b-form-select>\r\n        <b-form-invalid-feedback>\r\n          Country is required\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-Password\" label-cols-sm=\"3\" label=\"Password:\" label-for=\"password\">\r\n        <b-form-input id=\"password\" type=\"password\" v-model=\"$v.form.password.$model\" :state=\"validateState('password')\"></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.password.required\">\r\n          Password is required\r\n        </b-form-invalid-feedback>\r\n        <b-form-text v-else-if=\"$v.form.password.$error\" text-variant=\"info\">\r\n          Your password should be <strong>strong</strong>. <br />\r\n          For that, your password should be also:\r\n        </b-form-text>\r\n        <b-form-invalid-feedback v-if=\"$v.form.password.required && !$v.form.password.length\">\r\n          Password must be 5-10 characters long.\r\n        </b-form-invalid-feedback>\r\n         <b-form-invalid-feedback v-if=\"!$v.form.password.alpha\">\r\n          Password must contain at least one number and one speical character.\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-confirmedPassword\" label-cols-sm=\"3\" label=\"Confirm Password:\" label-for=\"confirmedPassword\">\r\n        <b-form-input id=\"confirmedPassword\" type=\"password\" v-model=\"$v.form.confirmedPassword.$model\" :state=\"validateState('confirmedPassword')\"></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.confirmedPassword.required\">\r\n          Password confirmation is required\r\n        </b-form-invalid-feedback>\r\n        <b-form-invalid-feedback v-else-if=\"!$v.form.confirmedPassword.sameAsPassword\">\r\n          The confirmed password is not equal to the original password\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-email\" label-cols-sm=\"3\" label=\"email:\" label-for=\"email\">\r\n        <b-form-input id=\"email\" type=\"text\" v-model=\"$v.form.email.$model\" :state=\"validateState('email')\"></b-form-input>\r\n          <b-form-invalid-feedback>\r\n          must be a valid email address\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-image\" label-cols-sm=\"3\" label=\"image:\" label-for=\"image\">\r\n        <b-form-input id=\"image\" type=\"text\" v-model=\"$v.form.image.$model\" :state=\"validateState('image')\"></b-form-input>\r\n          <b-form-invalid-feedback>\r\n          must be a vaild url\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\r\n      <b-button type=\"submit\" variant=\"primary\" style=\"width:250px;\" class=\"ml-5 w-75 Rbtn\">Register</b-button>\r\n      <div class=\"mt-2\">\r\n        You have an account already?\r\n        <router-link to=\"login\"> Log in here</router-link>\r\n      </div>\r\n    </b-form>\r\n    <b-alert class=\"mt-2\" v-if=\"form.submitError\" variant=\"warning\" dismissible show>\r\n      Register failed: {{ form.submitError }}\r\n    </b-alert>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport countries from \"../assets/countries\";\r\nimport {\r\n  required,\r\n  minLength,\r\n  maxLength,\r\n  alpha,\r\n  sameAs,\r\n  email,\r\n  url,\r\n  helpers\r\n} from \"vuelidate/lib/validators\";\r\n\r\nexport default {\r\n  name: \"Register\",\r\n  data() {\r\n    return {\r\n      form: {\r\n        username: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        country: null,\r\n        password: \"\",\r\n        confirmedPassword: \"\",\r\n        email: \"\",\r\n        submitError: undefined\r\n      },\r\n      countries: [{ value: null, text: \"\", disabled: true }],\r\n      errors: [],\r\n      validated: false\r\n    };\r\n  },\r\n  validations: {\r\n    form: {\r\n      username: {\r\n        required,\r\n        length: (u) => minLength(3)(u) && maxLength(8)(u),\r\n        alpha\r\n      },\r\n      country: {\r\n        required\r\n      },\r\n      password: {\r\n        required,\r\n        length: (p) => minLength(5)(p) && maxLength(10)(p),\r\n         alpha : helpers.regex('alpha', /^(?=.*[@#$%^&+=~!`])(?=.*[0-9])/)\r\n      },\r\n      confirmedPassword: {\r\n        required,\r\n        sameAsPassword: sameAs(\"password\")\r\n      },\r\n      firstName:{\r\n        required\r\n      },\r\n      lastName:{\r\n        required\r\n      },\r\n      email:{\r\n        required,\r\n        email\r\n      },\r\n      image:{\r\n        required\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.countries.push(...countries);\r\n  },\r\n  methods: {\r\n    validateState(param) {\r\n      const { $dirty, $error } = this.$v.form[param];\r\n      return $dirty ? !$error : null;\r\n    },\r\n    async Register() {\r\n      try {\r\n        const response = await this.axios.post(\r\n          \"https://backend3-2.herokuapp.com/register\",\r\n          {\r\n            username: this.form.username,\r\n            password: this.form.password,\r\n            passwordAgain: this.form.confirmedPassword,\r\n            first_name: this.form.firstName,\r\n            last_name: this.form.lastName,\r\n            country: this.form.country,\r\n            email: this.form.email,\r\n            image: this.form.image\r\n          }\r\n        );\r\n        this.$router.push(\"/login\");\r\n      } catch (err) {\r\n        console.log(err.response);\r\n        this.form.submitError = err.response.data;\r\n      }\r\n    },\r\n    onRegister() {\r\n      this.$v.form.$touch();\r\n      if (this.$v.form.$anyError) {\r\n        return;\r\n      }\r\n      this.Register();\r\n    },\r\n    onReset() {\r\n      this.form = {\r\n        username: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        country: null,\r\n        password: \"\",\r\n        confirmedPassword: \"\",\r\n        email: \"\"\r\n      };\r\n      this.$nextTick(() => {\r\n        this.$v.$reset();\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  max-width: 500px;\r\n}\r\n\r\n.Rbtn{\r\n   background-color: #92C67D; border-color: white\r\n}\r\n</style>"],"sourceRoot":"src/pages"}]}